# Generated by Django 4.2.20 on 2025-03-15 20:06

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ("network_monitor", "0002_alert_score_data"),
    ]

    operations = [
        migrations.CreateModel(
            name="Agent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("token", models.CharField(editable=False, max_length=64, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("online", "Online"),
                            ("offline", "Offline"),
                            ("pending", "Pending Registration"),
                            ("disabled", "Disabled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("linux", "Linux"),
                            ("windows", "Windows"),
                            ("docker", "Docker"),
                            ("other", "Other"),
                        ],
                        default="linux",
                        max_length=20,
                    ),
                ),
                ("endpoint_ip", models.GenericIPAddressField(blank=True, null=True)),
                (
                    "endpoint_hostname",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("last_seen", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "collection_interval",
                    models.IntegerField(
                        default=60, help_text="Collection interval in seconds"
                    ),
                ),
                ("enabled", models.BooleanField(default=True)),
                ("config", models.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name="DetectionRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("enabled", models.BooleanField(default=True)),
                (
                    "rule_type",
                    models.CharField(
                        choices=[
                            ("signature", "Signature-Based"),
                            ("anomaly", "Anomaly-Based"),
                            ("threshold", "Threshold-Based"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "pattern",
                    models.TextField(
                        blank=True,
                        help_text="Regex pattern for signature-based detection",
                        null=True,
                    ),
                ),
                (
                    "metric",
                    models.CharField(
                        blank=True,
                        help_text="Metric to monitor (e.g., packets_per_second)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "threshold",
                    models.FloatField(
                        blank=True,
                        help_text="Threshold value for triggering the rule",
                        null=True,
                    ),
                ),
                (
                    "time_window",
                    models.IntegerField(
                        blank=True,
                        help_text="Time window in seconds for the threshold",
                        null=True,
                    ),
                ),
                (
                    "baseline_data",
                    models.JSONField(
                        blank=True,
                        help_text="Baseline data for anomaly detection",
                        null=True,
                    ),
                ),
                (
                    "deviation_factor",
                    models.FloatField(
                        blank=True,
                        default=2.0,
                        help_text="Factor by which a value can deviate from the baseline",
                        null=True,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("should_alert", models.BooleanField(default=True)),
                (
                    "alert_message_template",
                    models.TextField(
                        blank=True,
                        help_text="Template for alert messages. Use {variables} for substitution.",
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RuleMatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("matched_at", models.DateTimeField(auto_now_add=True)),
                ("match_data", models.JSONField(default=dict)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rule_matches",
                        to="network_monitor.networkevent",
                    ),
                ),
                (
                    "rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matches",
                        to="network_monitor.detectionrule",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AgentLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("log_type", models.CharField(max_length=50)),
                ("source", models.CharField(max_length=100)),
                ("content", models.TextField()),
                ("parsed_data", models.JSONField(blank=True, default=dict)),
                ("is_processed", models.BooleanField(default=False)),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="network_monitor.agent",
                    ),
                ),
            ],
        ),
    ]
